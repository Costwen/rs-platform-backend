version: "3"

volumes: # 创建四个有名数据卷
#        db_vol:
        redis_vol:
        media_vol:
        static_vol:

networks:
        nginx_network:
                driver: bridge
#        db_network:
#                driver: bridge
        redis_network:
                driver: bridge

services:
        redis:
                image: redis:latest
                networks:
                        - redis_network
                volumes:
                        - redis_vol:/data # 通过挂载给redis备份,有很多种书写方式，这里的意思是将容器内/data目录映射到redis_vol这个volume下保存
                        - ./compose/redis:/home #左边是宿主机相对于docker-compose.yml文件的路径，右边是容器内路径
                command: redis-server /etc/redis/redis.conf
                ports:
                        - "6379:6379"
                restart: always # 若容器运行发生错误时，一直重启

        web:
                build: ../backend # 基于一个Dockerfile启动，每次启动都会构建容器
                expose:
                        - "8000"
                volumes:
                        - ../backend:/root/backend
                        - ./compose/uwsgi/:/tmp
                        - static_vol:/root/backend/static
                        - media_vol:/root/backend/media
                networks:
                        - nginx_network
#                        - db_network
                        - redis_network
                depends_on: # 决定了容器启动的先后顺序
#                        - db
                        - redis
                restart: always
                tty: true
                stdin_open: true

        nginx:
                build: ./compose/nginx
                ports:
                        - "80:80"
                        - "443:443"
                expose:
                        - 80
                volumes:
                        - ./compose/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
                        - ./compose/nginx/ssl:/usr/share/nginx/ssl # 挂载证书
                        - ./compose/nginx/log:/var/log/nginx
                        - media_vol:/usr/share/nginx/html/media
                        - static_vol:/usr/share/nginx/html/static
                networks:
                        - nginx_network
                depends_on:
                        - web
                restart: always
